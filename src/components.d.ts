/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Clip,
} from './interfaces/clip';


export namespace Components {
  interface TsVideoList {}
  interface TsVideoOutput {
    'clips': Clip[];
    'remixedVideo': string;
    'remixing': boolean;
  }
  interface TsVideoPlayer {
    'clips': Clip[];
  }
  interface TsVideoRangeSelector {
    'max': number;
    'min': number;
    'video': string;
  }
  interface TsVideoRemixer {}
}

declare global {


  interface HTMLTsVideoListElement extends Components.TsVideoList, HTMLStencilElement {}
  var HTMLTsVideoListElement: {
    prototype: HTMLTsVideoListElement;
    new (): HTMLTsVideoListElement;
  };

  interface HTMLTsVideoOutputElement extends Components.TsVideoOutput, HTMLStencilElement {}
  var HTMLTsVideoOutputElement: {
    prototype: HTMLTsVideoOutputElement;
    new (): HTMLTsVideoOutputElement;
  };

  interface HTMLTsVideoPlayerElement extends Components.TsVideoPlayer, HTMLStencilElement {}
  var HTMLTsVideoPlayerElement: {
    prototype: HTMLTsVideoPlayerElement;
    new (): HTMLTsVideoPlayerElement;
  };

  interface HTMLTsVideoRangeSelectorElement extends Components.TsVideoRangeSelector, HTMLStencilElement {}
  var HTMLTsVideoRangeSelectorElement: {
    prototype: HTMLTsVideoRangeSelectorElement;
    new (): HTMLTsVideoRangeSelectorElement;
  };

  interface HTMLTsVideoRemixerElement extends Components.TsVideoRemixer, HTMLStencilElement {}
  var HTMLTsVideoRemixerElement: {
    prototype: HTMLTsVideoRemixerElement;
    new (): HTMLTsVideoRemixerElement;
  };
  interface HTMLElementTagNameMap {
    'ts-video-list': HTMLTsVideoListElement;
    'ts-video-output': HTMLTsVideoOutputElement;
    'ts-video-player': HTMLTsVideoPlayerElement;
    'ts-video-range-selector': HTMLTsVideoRangeSelectorElement;
    'ts-video-remixer': HTMLTsVideoRemixerElement;
  }
}

declare namespace LocalJSX {
  interface TsVideoList extends JSXBase.HTMLAttributes<HTMLTsVideoListElement> {
    'onVideoSelected'?: (event: CustomEvent<any>) => void;
  }
  interface TsVideoOutput extends JSXBase.HTMLAttributes<HTMLTsVideoOutputElement> {
    'clips'?: Clip[];
    'onRemoveClip'?: (event: CustomEvent<any>) => void;
    'remixedVideo'?: string;
    'remixing'?: boolean;
  }
  interface TsVideoPlayer extends JSXBase.HTMLAttributes<HTMLTsVideoPlayerElement> {
    'clips'?: Clip[];
  }
  interface TsVideoRangeSelector extends JSXBase.HTMLAttributes<HTMLTsVideoRangeSelectorElement> {
    'max'?: number;
    'min'?: number;
    'onAddClip'?: (event: CustomEvent<any>) => void;
    'video'?: string;
  }
  interface TsVideoRemixer extends JSXBase.HTMLAttributes<HTMLTsVideoRemixerElement> {}

  interface IntrinsicElements {
    'ts-video-list': TsVideoList;
    'ts-video-output': TsVideoOutput;
    'ts-video-player': TsVideoPlayer;
    'ts-video-range-selector': TsVideoRangeSelector;
    'ts-video-remixer': TsVideoRemixer;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


